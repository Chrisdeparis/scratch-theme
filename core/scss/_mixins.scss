/********************MIXINS*********************/

/* for blur, be sure to change the
 * .svg file if you don`t want to
 * use the default size
 */

@mixin blur($size: 15px) {
    filter: url('../svg/blur.svg#blur');
    filter: blur($size);
}

@mixin grayscale {
    filter: url('../svg/desaturate.svg#grayscale');
    filter: grayscale(100%);
}

/* CSS Arrows (Helper class in global.scss) */
%arrow {
    width: 0;
    height: 0;
    border: 0.5em solid transparent;
}
@mixin arrow($direction, $color) {
    @extend %arrow;
    border-#{$direction}-color: $color;
}

/* Full Screen */
@mixin full-screen {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    min-width: 100%; 
    min-height: 100%;
    width: auto; 
    height: auto; 
}

/*
 * @font-face mixin
 * Bulletproof font-face via Font Squirrel
 * @include fontface(`family`, `assets/fonts`, `myfontname`);
 * Demonstrated in variables.scss
 */

@mixin font-face($font-family, $font-url, $font-name) {
	@font-face {
		font: {
			family: $font-family;
			style: normal;
			weight: normal;
		}
		src: url($font-url + '/' + $font-name + '.eot');
		src: url($font-url + '/' + $font-name + '.eot#iefix') format('embedded-opentype'),
			 url($font-url + '/' + $font-name + '.woff') format('woff'),
			 url($font-url + '/' + $font-name + '.ttf')  format('truetype'),
			 url($font-url + '/' + $font-name + '.svg#' + $font-family) format('svg');
	}
}

@mixin background($position: center center, $repeat: no-repeat, $size: cover) {
    background-position: $position;
    background-repeat: $repeat;
    background-size: $size;
}


/*
 * Mixins for easy mobile-first media queries
 * @include w_breakpoint(`l_ipad`) { SCSS here };
 * -- KEY --
 * w -- width
 * h -- height
 * p -- portrait
 * l -- landscape
 */

@mixin w_breakpoint($point) {
	@if $point == biggie {
		@media (min-width: 1279px) { @content; }
	}
	@else if $point == l_ipad {
		@media (min-width: 1023px) { @content; }
	}
    @else if $point == l_tablet {
		@media (min-width: 799px) { @content; }
	}
	@else if $point == p_ipad {
		@media (min-width: 767px) { @content; }
	}
    @else if $point == p_tablet {
		@media (min-width: 599px) { @content; }
	}
    @else if $point == l_iphone5 {
		@media (min-width: 567px) { @content; }
	}
    @else if $point == l_iphone {
		@media (min-width: 479px) { @content; }
	}
    @else if $point == p_iphone {
		@media (min-width: 319px) { @content; }
	}
}

@mixin h_breakpoint($point) {
	@if $point == biggie {
		@media (min-width: 1279px) and (min-height: 799px) { @content; }
	}
	@else if $point == l_ipad {
		@media (min-width: 1023px) and (min-height: 767px) { @content; }
	}
    @else if $point == l_tablet {
		@media (min-width: 799px) and (min-height: 599px) { @content; }
	}
	@else if $point == p_ipad {
		@media (min-width: 767px) and (min-height: 1023px) { @content; }
	}
    @else if $point == p_tablet {
		@media (min-width: 599px) and (min-height: 799px) { @content; }
	}
    @else if $point == l_iphone5 {
		@media (min-width: 567px) and (min-height: 319px) { @content; }
	}
    @else if $point == l_iphone {
		@media (min-width: 479px) and (min-height: 319px) { @content; }
	}
    @else if $point == p_iphone5 {
		@media (min-width: 319px) and (min-height: 567px) { @content; }
	}
    @else if $point == p_iphone {
		@media (min-width: 319px) and (min-height: 479px) { @content; }
	}
}

/*
 * REM to PX conversion without duplicate CSS
 * http://davidwalsh.name/rem-px-browser-function-sass
 */

$pixelBase : 16;

@function parseInt($n) {
	@return $n / ($n * 0 + 1);
}

@function u($values){

  $list: ();

  @each $value in $values {

    $unit : unit($value);
    $val  : parseInt($value);

    @if ($px-only) and ($unit == 'rem') {
      $list: append($list, ($val * $pixelBase) + px);
    }

    @else if($unit == 'px') or ($unit == 'rem') or ($unit == '') {
      $list: append($list, $value);
    }

    @else {
      @warn 'There is no unit conversion for #{$unit}';
    }

  }

  @return $list();

}

/*! HiDPI v2.0.1 | MIT License | git.io/hidpi */

// Force HiDPI graphics on regular displays
$hidpi-debug: false !default;

// Change default filename postfix
// default: imagename_x2.png
$hidpi-postfix: '_x2' !default;

// Default pixel ratio: 1.3 to support Nexus 7
// Depending on your target, you may want to set a
// more suitable minimum pixel ratio here:
// http://bjango.com/articles/min-device-pixel-ratio/
$hidpi-min-pixel-ratio: 1.3 !default;

@mixin hidpi-abstract($image, $extension, $postfix: $hidpi-postfix) {
  $image-fullname: '#{$image}.#{$extension}';
  $image-hidpi-fullname: '#{$image}#{$postfix}.#{$extension}';

  background-image: image-url($image-hidpi-fullname);
  background-size: image-width($image-fullname) image-height($image-fullname);
}

@mixin hidpi($image: false, $extension: png, $postfix: $hidpi-postfix) {
  @if $hidpi-debug {
    @if $image {
      @include hidpi-abstract($image, $extension, $postfix);
    } @else {
      @content;
    }
  } @else {
    @if $image {
      background-image: image-url('#{$image}.#{$extension}');
    }
    // Inspired by:
    // http://www.brettjankord.com/2012/11/28/cross-browser-retinahigh-resolution-media-queries/
    @media (-webkit-min-device-pixel-ratio: $hidpi-min-pixel-ratio),
           (min-resolution: $hidpi-min-pixel-ratio * 96dpi),
           (min-resolution: $hidpi-min-pixel-ratio * 1dppx) {
      @if $image {
        @include hidpi-abstract($image, $extension, $postfix);
      } @else {
        @content;
      }
    }
  }
}

/* let`s make a perfect circle */
@mixin circle {
    border-radius: 50%;
}
                
/* box shadow ~ blur, color */
@mixin bs-bc($b: 15px, $c: rgba(0,0,0,0.5)) {
    box-shadow: 0 0 $b 0 $c;
}
                        
/* text shadow ~ blur, color */
@mixin ts-bc($b: 15px, $c: rgba(0,0,0,0.5)) {
    text-shadow: 0 0 $b $c;
}

/* IMPORTANT: if you want to override easing`s default values, you MUST
 * include the `s` for Firefox to render the transition. See:
 * http://blog.assortedgarbage.com/2011/08/the-importance-of-s-in-css3-transition-shorthand/
 */
@mixin easing($prop: all, $duration: 0.25s, $delay: 0s) {
    transition: $prop $duration ease-in-out $delay;
}

/* CSS Vertical Centering */
@mixin valign {
  position: relative;
  top: 50%;
  transform: translate(0, -50%);
}

/* Ion Icons */
@mixin icons {
    font-family: 'Ionicons';
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    text-rendering: auto;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}